From e946bf908c1b2b91a9be44d852236228ece97b47 Mon Sep 17 00:00:00 2001
From: uberj <uberj@onid.orst.edu>
Date: Mon, 8 Oct 2012 21:13:10 -0700
Subject: [PATCH 02/12] initial commit

---
 .gitignore         |  2 ++
 labs/lab2/1q       | 32 ++++++++++++++++++++++++++++++++
 labs/lab2/Makefile |  4 ++++
 labs/lab2/eq1.m    | 15 +++++++++++++++
 labs/lab2/lab2.m   | 17 +++++++++++++++++
 labs/lab2/print.m  |  2 ++
 6 files changed, 72 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 labs/lab2/1q
 create mode 100644 labs/lab2/Makefile
 create mode 100644 labs/lab2/eq1.m
 create mode 100644 labs/lab2/eq2.m
 create mode 100644 labs/lab2/lab2.m
 create mode 100644 labs/lab2/print.m

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..1574084
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,2 @@
+labs/lab2/samp_prob1.m
+labs/lab2/samp_prob2.m
diff --git a/labs/lab2/1q b/labs/lab2/1q
new file mode 100644
index 0000000..08b6bea
--- /dev/null
+++ b/labs/lab2/1q
@@ -0,0 +1,32 @@
+disp(sprintf('\n\ne:\n'))
+
+% need 5 significant digits
+error_bound=.5E-5;
+
+% True value : exp(1), x= 1
+xtrue=exp(1);
+x=1;
+
+disp(sprintf('k \t x_n \t\t Relerr'));
+
+% Use a Taylor series approximation for exp(x) to evaluate exp(1). 
+
+
+n=0;
+xn=1;
+Relerr=abs(xtrue-xn)/xtrue;
+disp(sprintf('%d \t %0.11f \t %0.5e',n,xn,Relerr)); 
+
+%Start a stopwatch timer.
+tic
+% Keep increasing the number of terms in the Taylor approximation till 5
+% significant digits of accuracy is obtained.
+while Relerr>error_bound
+  n=n+1;
+  xn=xn+x^n/factorial(n);  
+  Relerr=abs(xtrue-xn)/xtrue;
+end
+disp(sprintf('%d \t %0.11f \t %0.5e',n,xn,Relerr)); 
+%Read the stopwatch timer
+toc
+
diff --git a/labs/lab2/Makefile b/labs/lab2/Makefile
new file mode 100644
index 0000000..521cd63
--- /dev/null
+++ b/labs/lab2/Makefile
@@ -0,0 +1,4 @@
+all:
+	MATLABPATH=$MATLABPATH:./
+	export MATLABPATH
+	matlab  -nosplash -nodisplay -nodesktop -r lab2_eq1
diff --git a/labs/lab2/eq1.m b/labs/lab2/eq1.m
new file mode 100644
index 0000000..d572865
--- /dev/null
+++ b/labs/lab2/eq1.m
@@ -0,0 +1,15 @@
+%% Equations
+%% log((1+x)/(1-x)) = (2) * (sum(k=1 to k=n (x^(2*k + 1)/(2*k - 1))))
+
+function y = eq1(x, n)
+% The equation for the first problem part 1
+%
+% log(1-x) = (-1) * (sum(k=1 to k=n x^k/k))
+
+    k = 0;
+    y = 0;
+    while k < n
+        k = k + 1;
+        y = y + power(x, k)/k;
+    end
+    y = y *-1.0
diff --git a/labs/lab2/eq2.m b/labs/lab2/eq2.m
new file mode 100644
index 0000000..e69de29
diff --git a/labs/lab2/lab2.m b/labs/lab2/lab2.m
new file mode 100644
index 0000000..28a2c73
--- /dev/null
+++ b/labs/lab2/lab2.m
@@ -0,0 +1,17 @@
+%% Problem 1
+%%
+% a. log(1.9)  = log(1-(-0.9))
+x = -0.9
+%%
+% b.
+% xtrue = 0.6418538861
+digits_of_accuracy = 11;
+xtrue = 0.6418538861;
+k = 1;
+while abs(eq1(-0.9, k) - xtrue) > power(10, (-1) * digits_of_accuracy)
+    k = k + 1
+end
+xcalc = eq1(-0.9, k)
+
+disp(sprintf('True value: %0.11f', xtrue));
+disp(sprintf('Calculated at %d (terms) iterations: %0.11f', k, xcalc));
diff --git a/labs/lab2/print.m b/labs/lab2/print.m
new file mode 100644
index 0000000..95f7a59
--- /dev/null
+++ b/labs/lab2/print.m
@@ -0,0 +1,2 @@
+function text = print(s)
+    disp(s);
-- 
1.7.11.3

